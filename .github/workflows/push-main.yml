name: Build from Main

on:
  push:
    branches:
      - recaptime-dev-mainline

jobs:
  # Sync container images between the local registry and GHCR as our intermerdate registry.
  # Since we use Doppler for secrets management, we don't be bothered setting up environment secrets
  # for prod.
  sync:
    runs-on: ubuntu-latest
    environment: "production"
    permissions:
      contents: "read"
      id-token: "write"
    env:
      RHQCR_REGISTRY: quay.io
      GHCR_REGISTRY: ghcr.io

    steps:
      - name: üì• git clone --depth 1 && git checkout
        uses: actions/checkout@v2
        with:
          repository: gitpodify/gitpodified-workspace-images

      - name: üîß .gitlab/ci/scripts/ci-setup
        run: |
          sudo apt-get install python3-pip shellcheck
          curl -sSL https://github.com/mvdan/sh/releases/download/v3.4.2/shfmt_v3.4.2_linux_amd64 -o shfmt
          sudo mv shfmt /usr/local/bin/shfmt && sudo chmod +x /usr/local/bin/shfmt
          sudo pip3 install pre-commit

      - name: ü§ì pre-commit
        run: |
          pre-commit run --all-files || true

      - name: üîÜ Install dazzle
        run: |
          curl -sSL https://github.com/gitpod-io/dazzle/releases/download/v0.1.6/dazzle_0.1.6_Linux_x86_64.tar.gz | sudo tar -xvz -C /usr/local/bin

      - name: üîÜ Install skopeo
        run: |
          . /etc/os-release
          # Update ca-certificates to avoid issues with LetEncr SSL certificates
          sudo apt update && sudo apt --only-upgrade install ca-certificates -y
          echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
          sudo apt update && sudo apt install -y skopeo

      - name: üèóÔ∏è Setup buildkit
        run: |
          curl -sSL https://github.com/moby/buildkit/releases/download/v0.9.3/buildkit-v0.9.3.linux-amd64.tar.gz | sudo tar xvz -C /usr
          sudo buildkitd --oci-worker=true --oci-worker-net=host --debug --group docker &
          sudo su -c "while ! test -S /run/buildkit/buildkitd.sock; do sleep 0.1; done"
          sudo chmod +777 /run/buildkit/buildkitd.sock

      # A hack as GH action does not allow you to force override cache storing if there was a cache hit
      # https://github.com/actions/cache/issues/628#issuecomment-986118455
      - name: üóÑÔ∏è Force override GitHub Actions cache
        uses: actions/cache@v2
        with:
          path: ~/registry
          key: ${{ runner.os }}-main-cache-${{ github.sha }}

      - name: üóÑÔ∏è Restore Registry Cache
        uses: actions/cache@v2
        with:
          path: ~/registry
          key: ${{ runner.os }}-main-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-main-cache-

      - name: üì¶ Setup local registry
        run: |
          docker run -it --detach --publish 5000:5000 --volume ~/registry:/var/lib/registry registry:2

      - name: üî® dazzle-buildkit.pipelines.recaptime.dev
        run: |
          dazzle build localhost:5000/recaptime-dev/gp-ws-images-build-artifacts --chunked-without-hash
          dazzle build localhost:5000/recaptime-dev/gp-ws-images-build-artifacts

      - name: üñáÔ∏è image-combiner.pipelines.recaptime.dev
        run: |
          dazzle combine localhost:5000/recaptime-dev/gp-ws-images-build-artifacts --all

      - name: ‚úçüèΩ Authenicate against GHCR and Quay.io
        run: |
          echo "===> Authenicating against GHCR"
          sudo skopeo login -u RecapTimeBot --password=${{ secrets.GHCR_SERVICE_ACCOUNT_PASSWORD }} https://${{env.GHCR_REGISTRY}}
          echo
          sleep 3

          echo "===> Authenicating against RHQCR"
          sudo skopeo login -u ${{ secrets.RHQCR_SERVICE_ACCOUNT_USERNAME }} --password=${{secrets.RHQCR_SERVICE_ACCOUNT_PASSWORD}} https://${{env.RHQCR_REGISTRY}}

      - name: üê≥ Sync combined images to GHCR
        run: |
          sudo skopeo sync \
            --src-tls-verify=false \
            --registries-conf=.github/registries.conf \
            --src yaml \
            --dest docker \
            .gihub/sync-containers.yml ${{env.GHCR_REGISTRY}}/gitpodify/gitpodified-workspace-images/dazzle-build-artifacts

      - name: üï∞Ô∏è Create timestamp tag
        id: create-timestamp-tag
        run: |
          echo "TIMESTAMP_TAG=dazzle-build-$(date '+%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: üîß Setup copy tools
        run: |
          sudo pip3 install yq

      - name: üìã Copy images with tag in the Artifact Registry
        run: |
          IMAGE_TAGS=$(cat .github/sync-container.yml | yq '.["localhost:5000"]."recaptime-dev"."gp-ws-images-build-artifacts"|join(" ")' -r)
          COPY_JOBS_PIDS=""
          for IMAGE_TAG in $IMAGE_TAGS;
          do
            sudo skopeo copy \
            docker://${{ env.GHCR_REGISTRY }}/gitpodify/gitpodified-workspace-images/dazzle-build-artifacts:$IMAGE_TAG \
            docker://${{ env.GHCR_REGISTRY }}/gitpodify/gitpodified-workspace-images/dazzle-build-artifacts/$IMAGE_TAG:${{ env.TIMESTAMP_TAG }} &

            COPY_JOBS_PIDS="$COPY_JOBS_PIDS $!"

            sudo skopeo copy \
            docker://${{ env.GHCR_REGISTRY }}/gitpodify/gitpodified-workspace-images/dazzle-build-artifact:$IMAGE_TAG \
            docker://${{ env.GHCR_REGISTRY }}/gitpodify/gitpodified-workspace-images/dazzle-build-artifacts/$IMAGE_TAG:latest &

            COPY_JOBS_PIDS="$COPY_JOBS_PIDS $!"

          done

          for COPY_JOBS_PID in $COPY_JOBS_PIDS; do
              wait $COPY_JOBS_PID || exit 1
          done

      - name: üê≥ Sync images with specific tags to RHQCR
        run: |
            sudo skopeo sync \
            --src yaml \
            --dest docker \
            .github/promote-images.yml ${{ env.RHQCR_REGISTRY }}/gitpodified-workspace-images
