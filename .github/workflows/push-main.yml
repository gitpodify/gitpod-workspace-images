name: Build from Main

on:
  push:
    branches:
      - recaptime-dev-mainline

env:
  RHQCR_REGISTRY: quay.io
  RHQCR_NAMESPACE: gitpodified-workspace-images
  GHCR_REGISTRY: ghcr.io
  GHCR_NAMESPACE: gitpodify/gitpodified-workspace-image/dazzle-build-artifact
  CLOUDSMITH_REGISTRY: docker.cloudsmith.io
  CLOUDSMITH_NAMESPACE: gitpodify/gitpodified-workspace-image

jobs:
  # Sync container images between the local registry and GHCR as our intermerdate registry.
  # Since we use Doppler for secrets management, we don't be bothered setting up environment secrets
  # for prod.
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Workflow Hack - Maximize build space"
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: "Workflow Hack - Maximize even more space"
        run: |
          sudo apt clean
          docker system prune --force --all
          df -h
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Load environment variables as masked secrets
        uses: catchco/doppler-environment-loader@v1.0.2
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}

      - name: üì• git clone --depth 1 && git checkout
        uses: actions/checkout@v2
        with:
          repository: gitpodify/gitpodified-workspace-images

      - name: üîß .gitlab/ci/scripts/ci-setup
        run: |
          sudo apt-get install python3-pip shellcheck uuid-runtime
          curl -sSL https://github.com/mvdan/sh/releases/download/v3.4.2/shfmt_v3.4.2_linux_amd64 -o shfmt
          sudo mv shfmt /usr/local/bin/shfmt && sudo chmod +x /usr/local/bin/shfmt
          sudo pip3 install pre-commit yq

      - name: ü§ì pre-commit
        run: |
          pre-commit run --all-files || true

      - name: üîÜ Install dazzle
        run: |
          curl -sSL https://github.com/gitpod-io/dazzle/releases/download/v0.1.11/dazzle_0.1.11_Linux_x86_64.tar.gz | sudo tar -xvz -C /usr/local/bin

      - name: üîÜ Setup CI Systems
        run: |
          echo "====> Installing Skopeo...."
          . /etc/os-release
          # Update ca-certificates to avoid issues with LetEncr SSL certificates
          sudo apt update && sudo apt --only-upgrade install ca-certificates -y
          echo "deb [signed-by=/usr/share/keyrings/skopeo-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | gpg --dearmor | sudo tee /usr/share/keyrings/skopeo-archive-keyring.gpg
          sudo apt update && sudo apt install -y skopeo

      - name: üèóÔ∏è Setup buildkit
        run: |
          curl -sSL https://github.com/moby/buildkit/releases/download/v0.10.2/buildkit-v0.10.2.linux-amd64.tar.gz | sudo tar xvz -C /usr
          sudo buildkitd --oci-worker=true --oci-worker-net=host --debug --group docker &
          sudo su -c "while ! test -S /run/buildkit/buildkitd.sock; do sleep 0.1; done"
          sudo chmod +777 /run/buildkit/buildkitd.sock


      - name: ‚úçüèΩ Authenicate against GHCR, Quay.io and Cloudsmith
        run: |
          echo "===> Authenicating against GHCR"
          sudo skopeo login -u RecapTimeBot --password=${{ secrets.GHCR_SERVICE_ACCOUNT_PASSWORD }} ${{env.GHCR_REGISTRY}}
          docker login -u RecapTimeBot --password=${{ secrets.GHCR_SERVICE_ACCOUNT_PASSWORD }} ${{env.GHCR_REGISTRY}}
          echo
          sleep 3

          echo "===> Authenicating against RHQCR"
          sudo skopeo login -u ${{ secrets.RHQCR_SERVICE_ACCOUNT_USERNAME }} --password=${{secrets.RHQCR_SERVICE_ACCOUNT_PASSWORD}} ${{env.RHQCR_REGISTRY}}
          docker login -u ${{ secrets.RHQCR_SERVICE_ACCOUNT_USERNAME }} --password=${{secrets.RHQCR_SERVICE_ACCOUNT_PASSWORD}} ${{env.RHQCR_REGISTRY}}

          echo "===> Authenticating against Cloudsmith"
          sudo skopeo login -u recaptimebot --password=${{secrets.CLOUDSMITH_API_KEY}} docker.cloudsmith.io
          docker login -u recaptimebot --password=${{secrets.CLOUDSMITH_API_KEY}} docker.cloudsmith.io

      - name: üî® dazzle-buildkit.pipelines.recaptime.dev
        run: |
          IMAGE_ARTIFACTS_REPO=${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }} ./build-all.sh

      - name: üï∞Ô∏è Create timestamp tag
        id: create-timestamp-tag
        run: |
          echo "TIMESTAMP_TAG=$(date '+%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

#      - name: üìã copy-to-ghcr.pipelines.recaptime.dev
#        run: |
#          ./devkit/bin/sync-local-to-ghcr

      - name: üê≥ sync-to-other-registries-docker.pipelines.recaptime.dev
        run: |
          IMAGE_TAGS=$(cat .github/sync-containers.yml | yq '.sync.images."workspace-base-images"|join(" ")' -r)
          COPY_JOBS_PIDS=""
          for IMAGE_TAG in $IMAGE_TAGS;
          do
            sudo skopeo copy \
            docker://${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}:$IMAGE_TAG \
            docker://${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/$IMAGE_TAG:${{ env.TIMESTAMP_TAG }} &

            COPY_JOBS_PIDS="$COPY_JOBS_PIDS $!"

            sudo skopeo copy \
            docker://${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}:$IMAGE_TAG \
            docker://${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/$IMAGE_TAG:latest &

            COPY_JOBS_PIDS="$COPY_JOBS_PIDS $!"

          done

          for COPY_JOBS_PID in $COPY_JOBS_PIDS; do
              wait $COPY_JOBS_PID || exit 1

      - name: üê≥ Sync images with specific tags to Docker Hub
        run: |
            sudo skopeo sync \
            --src yaml \
            --dest docker \
            .github/promote-images.yml ${{ env.RHQCR_REGISTRY }}/${{ env.RHQCR_NAMESPACE}}

            sudo skopeo sync \
            --src yaml \
            --dest docker \
            .github/promote-images.yml ${{ env.CLOUDSMITH_REGISTRY }}/${{ env.CLOUDSMITH_NAMESPACE }}
